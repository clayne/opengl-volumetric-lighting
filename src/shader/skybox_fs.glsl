// ------------------------------------------------------------------
// DEFINES ----------------------------------------------------------
// ------------------------------------------------------------------

#define VOXEL_GRID_SIZE_Z 128

// ------------------------------------------------------------------
// INPUTS  ----------------------------------------------------------
// ------------------------------------------------------------------

out vec3 FS_OUT_Color;

// ------------------------------------------------------------------
// OUTPUTS  ---------------------------------------------------------
// ------------------------------------------------------------------

in vec3 FS_IN_WorldPos;

// ------------------------------------------------------------------
// UNIFORMS  --------------------------------------------------------
// ------------------------------------------------------------------

uniform samplerCube s_Cubemap;
uniform sampler3D s_VoxelGrid;
uniform float u_Width;
uniform float u_Height;

// ------------------------------------------------------------------
// FUNCTIONS --------------------------------------------------------
// ------------------------------------------------------------------

vec3 add_inscattered_light(vec3 color)
{
    vec4 scattered_light = textureLod(s_VoxelGrid, vec3(float(gl_FragCoord.x)/u_Width, float(gl_FragCoord.y)/u_Height, 1.0f), 0.0f);
    float transmittance = scattered_light.a;

    return color * transmittance + scattered_light;
}

// ------------------------------------------------------------------
// MAIN -------------------------------------------------------------
// ------------------------------------------------------------------

void main()
{
    vec3 env_color = texture(s_Cubemap, FS_IN_WorldPos).rgb;

    // HDR tonemap and gamma correct
    env_color = env_color / (env_color + vec3(1.0));
    env_color = pow(env_color, vec3(1.0 / 2.2));

    FS_OUT_Color = add_inscattered_light(env_color);
}

// ------------------------------------------------------------------